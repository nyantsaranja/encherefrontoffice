{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\S5\\\\Cloud\\\\Ench\\xE8re\\\\front-enchere-backoffice\\\\src\\\\mothercomponents\\\\RefundDemands.jsx\",\n  _s = $RefreshSig$();\nimport { Crud } from \"./Crud\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { BASE_URL, CONFIG } from \"../service/Api-Call\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RefundDemands = () => {\n  _s();\n  const [refund_requests, setRefundRequests] = useState([]);\n  function setToArray(data) {\n    let arr = [];\n    for (let i = 0; i < data.length; i++) {\n      let tempArr = [];\n      tempArr.push(data[i].id);\n    }\n  }\n  useEffect(() => {\n    axios.get(`${BASE_URL}/refund_requests`, CONFIG).then(response => {\n      console.log(response.data.data);\n      const arr = setToArray(response.data.data);\n      setRefundRequests(arr);\n    }).catch(error => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Désolé...',\n        text: error.response.data.code + ': ' + error.response.data.message\n      });\n    });\n  }, []);\n  const headers = [\"ID\", \"Utilisateur\", \"Montant\", \"Date de mouvement\"];\n  const names = [\"id\", \"utilisateur\", \"montant\", \"datedemouvement\"];\n  const rows = [[\"1\", \"Jean Paul\", \"1000\", \"2021-01-01\"], [\"2\", \"Jean Claude\", \"2000\", \"2021-05-11\"], [\"3\", \"Thierry Henry\", \"3000\", \"2021-06-01\"]];\n  const textValues = {\n    ajouter: \"Ajouter un rechargement\",\n    modifier: \"Accepter le rechargment\",\n    supprimer: \"Supprimer le rechargment\",\n    btnCreer: \"Créer\"\n  };\n  const acceptRefund = id => {\n    console.log(id);\n  };\n  const userDefinedButton = {\n    name: \"Accepter\",\n    event: acceptRefund,\n    className: \"btn btn-success\",\n    value: \"Accepter\"\n  };\n  return /*#__PURE__*/_jsxDEV(Crud, {\n    userDefinedButton: userDefinedButton,\n    tableTitle: \"Liste des demandes de rechargement\",\n    headers: headers,\n    names: names,\n    rows: rows,\n    textValues: textValues,\n    crud: false,\n    page_description: \"Acceptation des demandes de recharge\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(RefundDemands, \"N6fMLfc8nMpxJ5QGpeNU2lJ2LKg=\");\n_c = RefundDemands;\nvar _c;\n$RefreshReg$(_c, \"RefundDemands\");","map":{"version":3,"names":["Crud","useEffect","useState","axios","Swal","BASE_URL","CONFIG","RefundDemands","refund_requests","setRefundRequests","setToArray","data","arr","i","length","tempArr","push","id","get","then","response","console","log","catch","error","fire","icon","title","text","code","message","headers","names","rows","textValues","ajouter","modifier","supprimer","btnCreer","acceptRefund","userDefinedButton","name","event","className","value"],"sources":["D:/ITU/S5/Cloud/Enchère/front-enchere-backoffice/src/mothercomponents/RefundDemands.jsx"],"sourcesContent":["import {Crud} from \"./Crud\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {BASE_URL, CONFIG} from \"../service/Api-Call\";\r\n\r\nexport const RefundDemands = () => {\r\n    const [refund_requests, setRefundRequests] = useState([]);\r\n\r\n    function setToArray(data) {\r\n        let arr=[];\r\n        for (let i = 0; i < data.length; i++) {\r\n            let tempArr=[]\r\n            tempArr.push(data[i].id)\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n            axios.get(`${BASE_URL}/refund_requests`,CONFIG).then((response) => {\r\n                console.log(response.data.data)\r\n                const arr=setToArray(response.data.data)\r\n                setRefundRequests(arr)\r\n            }).catch((error) => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Désolé...',\r\n                    text: error.response.data.code + ': ' + error.response.data.message,\r\n                })\r\n            })\r\n        },[]\r\n    )\r\n    const headers = [\r\n        \"ID\",\r\n        \"Utilisateur\",\r\n        \"Montant\",\r\n        \"Date de mouvement\"\r\n    ]\r\n    const names = [\r\n        \"id\",\r\n        \"utilisateur\",\r\n        \"montant\",\r\n        \"datedemouvement\"\r\n    ]\r\n    const rows = [\r\n        [\r\n            \"1\",\r\n            \"Jean Paul\",\r\n            \"1000\",\r\n            \"2021-01-01\"\r\n        ],\r\n        [\r\n            \"2\",\r\n            \"Jean Claude\",\r\n            \"2000\",\r\n            \"2021-05-11\"\r\n        ],\r\n        [\r\n            \"3\",\r\n            \"Thierry Henry\",\r\n            \"3000\",\r\n            \"2021-06-01\"\r\n        ]\r\n    ]\r\n    const textValues =\r\n        {\r\n            ajouter: \"Ajouter un rechargement\",\r\n            modifier: \"Accepter le rechargment\",\r\n            supprimer: \"Supprimer le rechargment\",\r\n            btnCreer: \"Créer\",\r\n        }\r\n    const acceptRefund = (id) => {\r\n        console.log(id)\r\n    }\r\n    const userDefinedButton = {\r\n        name: \"Accepter\",\r\n        event: acceptRefund,\r\n        className: \"btn btn-success\",\r\n        value: \"Accepter\"\r\n    }\r\n    return (\r\n        <Crud userDefinedButton={userDefinedButton} tableTitle={\"Liste des demandes de rechargement\"}\r\n              headers={headers}\r\n              names={names} rows={rows} textValues={textValues} crud={false}\r\n              page_description={\"Acceptation des demandes de recharge\"}/>\r\n    )\r\n}"],"mappings":";;AAAA,SAAQA,IAAI,QAAO,QAAQ;AAC3B,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAAQC,QAAQ,EAAEC,MAAM,QAAO,qBAAqB;AAAC;AAErD,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC/B,MAAM,CAACC,eAAe,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEzD,SAASQ,UAAU,CAACC,IAAI,EAAE;IACtB,IAAIC,GAAG,GAAC,EAAE;IACV,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAClC,IAAIE,OAAO,GAAC,EAAE;MACdA,OAAO,CAACC,IAAI,CAACL,IAAI,CAACE,CAAC,CAAC,CAACI,EAAE,CAAC;IAE5B;EACJ;EAEAhB,SAAS,CAAC,MAAM;IACRE,KAAK,CAACe,GAAG,CAAE,GAAEb,QAAS,kBAAiB,EAACC,MAAM,CAAC,CAACa,IAAI,CAAEC,QAAQ,IAAK;MAC/DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACT,IAAI,CAACA,IAAI,CAAC;MAC/B,MAAMC,GAAG,GAACF,UAAU,CAACU,QAAQ,CAACT,IAAI,CAACA,IAAI,CAAC;MACxCF,iBAAiB,CAACG,GAAG,CAAC;IAC1B,CAAC,CAAC,CAACW,KAAK,CAAEC,KAAK,IAAK;MAChBpB,IAAI,CAACqB,IAAI,CAAC;QACNC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,WAAW;QAClBC,IAAI,EAAEJ,KAAK,CAACJ,QAAQ,CAACT,IAAI,CAACkB,IAAI,GAAG,IAAI,GAAGL,KAAK,CAACJ,QAAQ,CAACT,IAAI,CAACmB;MAChE,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CACP;EACD,MAAMC,OAAO,GAAG,CACZ,IAAI,EACJ,aAAa,EACb,SAAS,EACT,mBAAmB,CACtB;EACD,MAAMC,KAAK,GAAG,CACV,IAAI,EACJ,aAAa,EACb,SAAS,EACT,iBAAiB,CACpB;EACD,MAAMC,IAAI,GAAG,CACT,CACI,GAAG,EACH,WAAW,EACX,MAAM,EACN,YAAY,CACf,EACD,CACI,GAAG,EACH,aAAa,EACb,MAAM,EACN,YAAY,CACf,EACD,CACI,GAAG,EACH,eAAe,EACf,MAAM,EACN,YAAY,CACf,CACJ;EACD,MAAMC,UAAU,GACZ;IACIC,OAAO,EAAE,yBAAyB;IAClCC,QAAQ,EAAE,yBAAyB;IACnCC,SAAS,EAAE,0BAA0B;IACrCC,QAAQ,EAAE;EACd,CAAC;EACL,MAAMC,YAAY,GAAItB,EAAE,IAAK;IACzBI,OAAO,CAACC,GAAG,CAACL,EAAE,CAAC;EACnB,CAAC;EACD,MAAMuB,iBAAiB,GAAG;IACtBC,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAEH,YAAY;IACnBI,SAAS,EAAE,iBAAiB;IAC5BC,KAAK,EAAE;EACX,CAAC;EACD,oBACI,QAAC,IAAI;IAAC,iBAAiB,EAAEJ,iBAAkB;IAAC,UAAU,EAAE,oCAAqC;IACvF,OAAO,EAAET,OAAQ;IACjB,KAAK,EAAEC,KAAM;IAAC,IAAI,EAAEC,IAAK;IAAC,UAAU,EAAEC,UAAW;IAAC,IAAI,EAAE,KAAM;IAC9D,gBAAgB,EAAE;EAAuC;IAAA;IAAA;IAAA;EAAA,QAAE;AAEzE,CAAC;AAAA,GAhFY3B,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}