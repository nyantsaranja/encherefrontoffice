{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\S5\\\\Cloud\\\\Ench\\xE8re\\\\front-enchere-backoffice\\\\src\\\\mothercomponents\\\\BestUsers.jsx\",\n  _s = $RefreshSig$();\nimport { Crud } from \"./Crud\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BASE_URL, CONFIG } from \"../service/Api-Call\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BestUsers = () => {\n  _s();\n  const [bestUsers, setBestUsers] = useState([]);\n  function setToArray(data) {\n    let arr = [];\n    for (let i = 0; i < data.length; i++) {\n      let tempArr = [];\n      tempArr.push(data[i].id);\n      tempArr.push(data[i].firstname + \" \" + data[i].lastname);\n      tempArr.push(data[i].email);\n      tempArr.push(data[i].phone);\n      tempArr.push(data[i].total);\n      arr.push(tempArr);\n    }\n  }\n  useEffect(() => {\n    axios.get(`${BASE_URL}/best_users`, CONFIG).then(response => {\n      console.log(response.data.data);\n      const arr = setToArray(response.data.data);\n      setBestUsers(arr);\n    }).catch(error => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Désolé...',\n        text: error.response.data.code + ': ' + error.response.data.message\n      });\n    });\n  }, []);\n  const headers = [\"ID\", \"Utilisateur\", \"Nombre d'enchèrissements\", \"Montant dépensé\", \"Date d'intégration\"];\n  const names = [\"id\", \"utilisateur\", \"nombreenchere\", \"montantdepense\", \"dateintegration\"];\n  const rows = [[\"1\", \"Jean Paul\", \"10\", \"1000\", \"2021-01-01\"], [\"2\", \"Jean Claude\", \"20\", \"2000\", \"2021-05-11\"], [\"3\", \"Thierry Henry\", \"30\", \"3000\", \"2021-06-01\"]];\n  const textValues = {\n    ajouter: \"Ajouter un utilisateur\",\n    modifier: \"Accepter le utilisateur\",\n    supprimer: \"Supprimer l'utilisateur\",\n    btnCreer: \"Créer\"\n  };\n  return /*#__PURE__*/_jsxDEV(Crud, {\n    tableTitle: \"Liste des meilleurs encherisseurs\",\n    headers: headers,\n    names: names,\n    rows: rows,\n    textValues: textValues,\n    crud: false,\n    page_description: \"Les encherisseurs classés par nombre d'enchère effectuée et le montant rapporté\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(BestUsers, \"1A0bN03lA3mvgytttI47UW1QYMw=\");\n_c = BestUsers;\nvar _c;\n$RefreshReg$(_c, \"BestUsers\");","map":{"version":3,"names":["Crud","useEffect","useState","axios","BASE_URL","CONFIG","Swal","BestUsers","bestUsers","setBestUsers","setToArray","data","arr","i","length","tempArr","push","id","firstname","lastname","email","phone","total","get","then","response","console","log","catch","error","fire","icon","title","text","code","message","headers","names","rows","textValues","ajouter","modifier","supprimer","btnCreer"],"sources":["D:/ITU/S5/Cloud/Enchère/front-enchere-backoffice/src/mothercomponents/BestUsers.jsx"],"sourcesContent":["import {Crud} from \"./Crud\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL, CONFIG} from \"../service/Api-Call\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const BestUsers = () => {\r\n    const [bestUsers, setBestUsers] = useState([]);\r\n\r\n    function setToArray(data) {\r\n        let arr = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            let tempArr = []\r\n            tempArr.push(data[i].id)\r\n            tempArr.push(data[i].firstname+\" \"+data[i].lastname)\r\n            tempArr.push(data[i].email)\r\n            tempArr.push(data[i].phone)\r\n            tempArr.push(data[i].total)\r\n            arr.push(tempArr)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL}/best_users`, CONFIG).then((response) => {\r\n            console.log(response.data.data)\r\n            const arr = setToArray(response.data.data)\r\n            setBestUsers(arr)\r\n        }).catch((error) => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Désolé...',\r\n                text: error.response.data.code + ': ' + error.response.data.message,\r\n            })\r\n        }\r\n        )\r\n    },[])\r\n    const headers = [\r\n        \"ID\",\r\n        \"Utilisateur\",\r\n        \"Nombre d'enchèrissements\",\r\n        \"Montant dépensé\",\r\n        \"Date d'intégration\"\r\n    ]\r\n    const names = [\r\n        \"id\",\r\n        \"utilisateur\",\r\n        \"nombreenchere\",\r\n        \"montantdepense\",\r\n        \"dateintegration\"\r\n    ]\r\n    const rows = [\r\n        [\r\n            \"1\",\r\n            \"Jean Paul\",\r\n            \"10\",\r\n            \"1000\",\r\n            \"2021-01-01\"\r\n        ],\r\n        [\r\n            \"2\",\r\n            \"Jean Claude\",\r\n            \"20\",\r\n            \"2000\",\r\n            \"2021-05-11\"\r\n        ],\r\n        [\r\n            \"3\",\r\n            \"Thierry Henry\",\r\n            \"30\",\r\n            \"3000\",\r\n            \"2021-06-01\"\r\n        ]\r\n    ]\r\n    const textValues =\r\n        {\r\n            ajouter: \"Ajouter un utilisateur\",\r\n            modifier: \"Accepter le utilisateur\",\r\n            supprimer: \"Supprimer l'utilisateur\",\r\n            btnCreer: \"Créer\",\r\n        }\r\n    return (\r\n        <Crud tableTitle={\"Liste des meilleurs encherisseurs\"} headers={headers} names={names} rows={rows} textValues={textValues} crud={false} page_description={\"Les encherisseurs classés par nombre d'enchère effectuée et le montant rapporté\"}/>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}