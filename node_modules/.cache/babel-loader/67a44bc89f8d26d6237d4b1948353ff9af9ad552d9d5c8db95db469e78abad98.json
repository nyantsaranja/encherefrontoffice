{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\S5\\\\Cloud\\\\Ench\\xE8re\\\\front-enchere-backoffice\\\\src\\\\mothercomponents\\\\CrudCategory.jsx\";\nimport { TableChild } from \"../childcomponents/TableChild\";\nimport Swal from \"sweetalert2\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CrudCategory = _ref => {\n  let {\n    page_description\n  } = _ref;\n  document.getElementById(\"page-description\").innerHTML = page_description;\n  const headers = [\"ID\", \"Nom\", \"Description\"];\n  const names = [\"id\", \"name\", \"description\"];\n  const rows = [[\"1\", \"Informatique\", \"Tout ce qui concerne l'informatique\"], [\"2\", \"Electronique\", \"Tout ce qui concerne l'électronique\"], [\"3\", \"Mécanique\", \"Tout ce qui concerne la mécanique\"]];\n  const updateCategory = id => {\n    const array = getCategoryData(id);\n    const inputStrings = getHtmlInputString(array);\n    console.log(inputStrings);\n    Swal.fire({\n      title: \"Modifier la catégorie\",\n      html: inputStrings,\n      showCancelButton: true,\n      confirmButtonText: \"Modifier\",\n      cancelButtonText: \"Annuler\",\n      showLoaderOnConfirm: true,\n      preConfirm: () => {\n        const formControl = document.getElementsByClassName(\"myform\");\n        const obj = {};\n        for (let i = 0; i < formControl.length; i++) {\n          if (formControl[i].value === \"\" || formControl[i].value === null || formControl[i].value === undefined) {\n            Swal.fire({\n              icon: \"error\",\n              title: \"Oops...\",\n              text: \"Veuillez remplir tous les champs !\"\n            });\n          }\n          obj[names[i]] = formControl[i].value;\n        }\n        console.log(obj);\n      }\n    });\n  };\n  const getHtmlInputString = valuesArray => {\n    let htmlString = \"\";\n    valuesArray.forEach((value, index) => {\n      // check if the value is a number\n      if (isNaN(value)) {\n        htmlString += `<label>${headers[index]}</label><input type=\"text\" value=\"${value}\" class=\"form-control myform\"/>`;\n      } else if (!isNaN(value)) {\n        htmlString += `<label>${headers[index]}</label><input type=\"number\" value=\"${value}\" class=\"form-control myform\"/>`;\n      } // check if the value is a date\n      else if (value.includes(\"-\")) {\n        htmlString += `<label>${headers[index]}</label><input type=\"date\" value=\"${value}\" class=\"form-control myform\"/>`;\n      }\n      htmlString += `<br/>`;\n    });\n    return htmlString;\n  };\n  const deleteCategory = id => {\n    Swal.fire({\n      title: 'Êtes-vous sûr?',\n      text: \"Vous ne pourrez pas revenir en arrière!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Oui, supprimez-le!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire('Supprimé!', 'Votre fichier a été supprimé.', 'success');\n      }\n    });\n  };\n  const buttons = [{\n    value: \"Modifier\",\n    className: \"btn btn-warning\",\n    icon: \"fas fa-edit\",\n    event: updateCategory\n  }, {\n    value: \"Supprimer\",\n    className: \"btn btn-danger\",\n    icon: \"fas fa-trash\",\n    event: deleteCategory\n  }];\n  const createBtn = document.getElementById(\"createBtn\");\n  createBtn.innerHTML = \"Créer une catégorie\";\n  createBtn.onclick = async () => {\n    const {\n      value: formValues\n    } = await Swal.fire({\n      title: 'Ajouter une catégorie',\n      html: '<label>Nom</label>' + '<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Nom\">' + '<label>Description</label>' + '<input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Description\">',\n      focusConfirm: false,\n      preConfirm: () => {\n        return [document.getElementById('swal-input1').value, document.getElementById('swal-input2').value];\n      }\n    });\n    if (formValues) {\n      if (formValues[0] === \"\" || formValues[1] === \"\") {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Veuillez remplir tous les champs!'\n        });\n        return;\n      }\n      const obj = {\n        name: formValues[0],\n        description: formValues[1]\n      };\n      Swal.fire(JSON.stringify(obj));\n    }\n  };\n  const getCategoryData = id => {\n    return rows[id];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      padding: '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(TableChild, {\n          titre: \"Liste des catégories\",\n          headers: headers,\n          rows: rows,\n          buttons: buttons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_c = CrudCategory;\nvar _c;\n$RefreshReg$(_c, \"CrudCategory\");","map":{"version":3,"names":["TableChild","Swal","useRef","CrudCategory","page_description","document","getElementById","innerHTML","headers","names","rows","updateCategory","id","array","getCategoryData","inputStrings","getHtmlInputString","console","log","fire","title","html","showCancelButton","confirmButtonText","cancelButtonText","showLoaderOnConfirm","preConfirm","formControl","getElementsByClassName","obj","i","length","value","undefined","icon","text","valuesArray","htmlString","forEach","index","isNaN","includes","deleteCategory","confirmButtonColor","cancelButtonColor","then","result","isConfirmed","buttons","className","event","createBtn","onclick","formValues","focusConfirm","name","description","JSON","stringify","padding"],"sources":["D:/ITU/S5/Cloud/Enchère/front-enchere-backoffice/src/mothercomponents/CrudCategory.jsx"],"sourcesContent":["import {TableChild} from \"../childcomponents/TableChild\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useRef} from \"react\";\r\n\r\nexport const CrudCategory = ({page_description}) => {\r\n    document.getElementById(\"page-description\").innerHTML = page_description;\r\n    const headers = [\r\n        \"ID\",\r\n        \"Nom\",\r\n        \"Description\",\r\n    ]\r\n    const names = [\r\n        \"id\",\r\n        \"name\",\r\n        \"description\",\r\n    ]\r\n    const rows = [\r\n        [\r\n            \"1\",\r\n            \"Informatique\",\r\n            \"Tout ce qui concerne l'informatique\",\r\n        ],\r\n        [\r\n            \"2\",\r\n            \"Electronique\",\r\n            \"Tout ce qui concerne l'électronique\",\r\n        ],\r\n        [\r\n            \"3\",\r\n            \"Mécanique\",\r\n            \"Tout ce qui concerne la mécanique\",\r\n        ]\r\n    ]\r\n    const updateCategory = (id) => {\r\n        const array= getCategoryData(id);\r\n        const inputStrings=getHtmlInputString(array);\r\n        console.log(inputStrings)\r\n        Swal.fire({\r\n            title: \"Modifier la catégorie\",\r\n            html: inputStrings,\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Modifier\",\r\n            cancelButtonText: \"Annuler\",\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: () => {\r\n                const formControl = document.getElementsByClassName(\"myform\");\r\n                const obj = {};\r\n                for (let i = 0; i < formControl.length; i++) {\r\n                    if (formControl[i].value === \"\" || formControl[i].value === null || formControl[i].value === undefined) {\r\n                        Swal.fire({\r\n                            icon: \"error\",\r\n                            title: \"Oops...\",\r\n                            text: \"Veuillez remplir tous les champs !\",\r\n                        })\r\n                    }\r\n                    obj[names[i]] = formControl[i].value;\r\n                }\r\n                console.log(obj)\r\n            }\r\n        }\r\n        )\r\n    }\r\n    const getHtmlInputString = (valuesArray,) => {\r\n        let htmlString = \"\";\r\n        valuesArray.forEach((value,index) => {\r\n            // check if the value is a number\r\n            if (isNaN(value)) {\r\n                htmlString += `<label>${headers[index]}</label><input type=\"text\" value=\"${value}\" class=\"form-control myform\"/>`;\r\n            }else if(!isNaN(value)){\r\n                htmlString += `<label>${headers[index]}</label><input type=\"number\" value=\"${value}\" class=\"form-control myform\"/>`;\r\n            }// check if the value is a date\r\n            else if (value.includes(\"-\")) {\r\n                htmlString += `<label>${headers[index]}</label><input type=\"date\" value=\"${value}\" class=\"form-control myform\"/>`;\r\n            }\r\n            htmlString += `<br/>`;\r\n        });\r\n        return htmlString;\r\n    }\r\n    const deleteCategory = (id) => {\r\n        Swal.fire({\r\n            title: 'Êtes-vous sûr?',\r\n            text: \"Vous ne pourrez pas revenir en arrière!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Oui, supprimez-le!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Supprimé!',\r\n                    'Votre fichier a été supprimé.',\r\n                    'success'\r\n                )\r\n            }\r\n        }\r\n        )\r\n    }\r\n    const buttons = [\r\n        {\r\n            value:\"Modifier\",\r\n            className:\"btn btn-warning\",\r\n            icon:\"fas fa-edit\",\r\n            event: updateCategory\r\n        },\r\n        {\r\n            value:\"Supprimer\",\r\n            className:\"btn btn-danger\",\r\n            icon:\"fas fa-trash\",\r\n            event: deleteCategory\r\n        }\r\n    ]\r\n    const createBtn= document.getElementById(\"createBtn\");\r\n    createBtn.innerHTML = \"Créer une catégorie\";\r\n    createBtn.onclick = async () => {\r\n        const {value: formValues} = await Swal.fire({\r\n            title: 'Ajouter une catégorie',\r\n            html:\r\n                '<label>Nom</label>' +\r\n                '<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Nom\">' +\r\n                '<label>Description</label>' +\r\n                '<input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Description\">',\r\n            focusConfirm: false,\r\n            preConfirm: () => {\r\n                return [\r\n                    document.getElementById('swal-input1').value,\r\n                    document.getElementById('swal-input2').value\r\n                ]\r\n            }\r\n        })\r\n        if (formValues) {\r\n            if (formValues[0] === \"\" || formValues[1] === \"\") {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Veuillez remplir tous les champs!',\r\n                })\r\n                return;\r\n            }\r\n            const obj = {\r\n                name: formValues[0],\r\n                description: formValues[1]\r\n            }\r\n            Swal.fire(JSON.stringify(obj))\r\n        }\r\n    }\r\n    const getCategoryData = (id) => {\r\n        return rows[id];\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\" style={{padding: '10px'}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <TableChild titre={\"Liste des catégories\"} headers={headers} rows={rows} buttons={buttons}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}