{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\S5\\\\Cloud\\\\Ench\\xE8re\\\\front-enchere-backoffice\\\\src\\\\mothercomponents\\\\Crud.jsx\";\nimport { TableChild } from \"../childcomponents/TableChild\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Crud = _ref => {\n  let {\n    page_description,\n    headers,\n    names,\n    rows,\n    textValues,\n    crud,\n    tableTitle,\n    userDefinedButton\n  } = _ref;\n  document.getElementById(\"page-description\").innerHTML = page_description;\n  const updateCategory = id => {\n    const array = getCategoryData(id);\n    const inputStrings = getHtmlInputString(array, false);\n    console.log(inputStrings);\n    Swal.fire({\n      title: textValues.modifier,\n      html: inputStrings,\n      showCancelButton: true,\n      confirmButtonText: \"Modifier\",\n      cancelButtonText: \"Annuler\",\n      showLoaderOnConfirm: true,\n      preConfirm: () => {\n        const formControl = document.getElementsByClassName(\"myform\");\n        const obj = getObj(formControl, false);\n        console.log(obj);\n      }\n    });\n  };\n  if (!crud) {\n    document.getElementById(\"createBtn\").style.display = \"none\";\n  }\n  const getObj = (formControl, insert) => {\n    const obj = {};\n    console.log(formControl.length);\n    var number = 0;\n    if (insert) {\n      number = 1;\n    }\n    for (let i = 0; i < formControl.length; i++) {\n      if (formControl[i].value === \"\" || formControl[i].value === null || formControl[i].value === undefined) {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: \"Veuillez remplir tous les champs !\"\n        });\n        return null;\n      } else {\n        obj[names[i + number]] = formControl[i].value;\n      }\n    }\n    return obj;\n  };\n  const getHtmlInputString = (valuesArray, insert) => {\n    let htmlString = \"\";\n    console.log(valuesArray);\n    valuesArray.forEach((value, index) => {\n      console.log(index, insert);\n      if (insert && index === 0) {\n        return;\n      }\n      if (insert) {\n        value = \"\";\n      }\n      // check if the value is a number\n      if (isNaN(value)) {\n        htmlString += `<label>${headers[index]}</label><input type=\"text\" value=\"${value}\" class=\"form-control myform\"/>`;\n      } else if (!isNaN(value)) {\n        htmlString += `<label>${headers[index]}</label><input type=\"number\" value=\"${value}\" class=\"form-control myform\"/>`;\n      } // check if the value is a date\n      else if (value.includes(\"-\")) {\n        htmlString += `<label>${headers[index]}</label><input type=\"date\" value=\"${value}\" class=\"form-control myform\"/>`;\n      }\n      htmlString += `<br/>`;\n    });\n    return htmlString;\n  };\n  const deleteCategory = id => {\n    Swal.fire({\n      title: 'Êtes-vous sûr?',\n      text: \"Vous ne pourrez pas revenir en arrière!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Oui, supprimez-le!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire('Supprimé!', 'Votre fichier a été supprimé.', 'success');\n      }\n    });\n  };\n  const buttons = [{\n    value: \"Modifier\",\n    className: \"btn btn-warning\",\n    icon: \"fas fa-edit\",\n    event: updateCategory\n  }, {\n    value: \"Supprimer\",\n    className: \"btn btn-danger\",\n    icon: \"fas fa-trash\",\n    event: deleteCategory\n  }];\n  const createBtn = document.getElementById(\"createBtn\");\n  createBtn.innerHTML = textValues.btnCreer;\n  createBtn.onclick = async () => {\n    const inputStrings = getHtmlInputString(headers, true);\n    const {\n      value: formValues\n    } = await Swal.fire({\n      title: textValues.ajouter,\n      html: inputStrings,\n      focusConfirm: false,\n      preConfirm: () => {\n        const formControl = document.getElementsByClassName(\"myform\");\n        const obj = getObj(formControl, true);\n        console.log(obj);\n      }\n    });\n  };\n  const getCategoryData = id => {\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i][0] === id) {\n        return rows[i];\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      padding: '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(TableChild, {\n          userDefinedButton: userDefinedButton,\n          titre: tableTitle,\n          headers: headers,\n          rows: rows,\n          buttons: crud === true ? buttons : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_c = Crud;\nvar _c;\n$RefreshReg$(_c, \"Crud\");","map":{"version":3,"names":["TableChild","Swal","Crud","page_description","headers","names","rows","textValues","crud","tableTitle","userDefinedButton","document","getElementById","innerHTML","updateCategory","id","array","getCategoryData","inputStrings","getHtmlInputString","console","log","fire","title","modifier","html","showCancelButton","confirmButtonText","cancelButtonText","showLoaderOnConfirm","preConfirm","formControl","getElementsByClassName","obj","getObj","style","display","insert","length","number","i","value","undefined","icon","text","valuesArray","htmlString","forEach","index","isNaN","includes","deleteCategory","confirmButtonColor","cancelButtonColor","then","result","isConfirmed","buttons","className","event","createBtn","btnCreer","onclick","formValues","ajouter","focusConfirm","padding"],"sources":["D:/ITU/S5/Cloud/Enchère/front-enchere-backoffice/src/mothercomponents/Crud.jsx"],"sourcesContent":["import {TableChild} from \"../childcomponents/TableChild\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const Crud = ({page_description,headers,names,rows, textValues, crud, tableTitle, userDefinedButton}) => {\r\n    document.getElementById(\"page-description\").innerHTML = page_description;\r\n    const updateCategory = (id) => {\r\n        const array= getCategoryData(id);\r\n        const inputStrings=getHtmlInputString(array,false);\r\n        console.log(inputStrings)\r\n        Swal.fire({\r\n            title: textValues.modifier,\r\n            html: inputStrings,\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Modifier\",\r\n            cancelButtonText: \"Annuler\",\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: () => {\r\n                const formControl = document.getElementsByClassName(\"myform\");\r\n                const obj = getObj(formControl,false);\r\n                console.log(obj)\r\n            }\r\n        }\r\n        )\r\n    }\r\n    if (!crud){\r\n        document.getElementById(\"createBtn\").style.display = \"none\";\r\n    }\r\n    const getObj = (formControl, insert) => {\r\n        const obj = {};\r\n        console.log(formControl.length)\r\n        var number = 0;\r\n        if (insert) {\r\n            number = 1;\r\n        }\r\n        for (let i = 0; i < formControl.length; i++) {\r\n            if(formControl[i].value === \"\" || formControl[i].value === null || formControl[i].value === undefined) {\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Oops...\",\r\n                    text: \"Veuillez remplir tous les champs !\",\r\n                })\r\n                return null;\r\n            }else {\r\n                obj[names[i+number]] = formControl[i].value;\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    const getHtmlInputString = (valuesArray,insert) => {\r\n        let htmlString = \"\";\r\n        console.log(valuesArray)\r\n        valuesArray.forEach((value,index) => {\r\n            console.log(index,insert)\r\n            if (insert && index===0) {\r\n                return;\r\n            }\r\n            if(insert){\r\n                value = \"\";\r\n            }\r\n            // check if the value is a number\r\n            if (isNaN(value)) {\r\n                htmlString += `<label>${headers[index]}</label><input type=\"text\" value=\"${value}\" class=\"form-control myform\"/>`;\r\n            }else if(!isNaN(value)){\r\n                htmlString += `<label>${headers[index]}</label><input type=\"number\" value=\"${value}\" class=\"form-control myform\"/>`;\r\n            }// check if the value is a date\r\n            else if (value.includes(\"-\")) {\r\n                htmlString += `<label>${headers[index]}</label><input type=\"date\" value=\"${value}\" class=\"form-control myform\"/>`;\r\n            }\r\n            htmlString += `<br/>`;\r\n        });\r\n        return htmlString;\r\n    }\r\n    const deleteCategory = (id) => {\r\n        Swal.fire({\r\n            title: 'Êtes-vous sûr?',\r\n            text: \"Vous ne pourrez pas revenir en arrière!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Oui, supprimez-le!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Supprimé!',\r\n                    'Votre fichier a été supprimé.',\r\n                    'success'\r\n                )\r\n            }\r\n        }\r\n        )\r\n    }\r\n    const buttons = [\r\n        {\r\n            value:\"Modifier\",\r\n            className:\"btn btn-warning\",\r\n            icon:\"fas fa-edit\",\r\n            event: updateCategory\r\n        },\r\n        {\r\n            value:\"Supprimer\",\r\n            className:\"btn btn-danger\",\r\n            icon:\"fas fa-trash\",\r\n            event: deleteCategory\r\n        }\r\n    ]\r\n    const createBtn= document.getElementById(\"createBtn\");\r\n    createBtn.innerHTML = textValues.btnCreer;\r\n    createBtn.onclick = async () => {\r\n        const inputStrings=getHtmlInputString(headers,true);\r\n        const {value: formValues} = await Swal.fire({\r\n            title: textValues.ajouter,\r\n            html:\r\n                inputStrings,\r\n            focusConfirm: false,\r\n            preConfirm: () => {\r\n                const formControl = document.getElementsByClassName(\"myform\");\r\n                const obj = getObj(formControl,true);\r\n                console.log(obj)\r\n            }\r\n        })\r\n    }\r\n    const getCategoryData = (id) => {\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (rows[i][0] === id) {\r\n                return rows[i];\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\" style={{padding: '10px'}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <TableChild userDefinedButton={userDefinedButton} titre={tableTitle} headers={headers} rows={rows} buttons={crud===true ? buttons: undefined}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}