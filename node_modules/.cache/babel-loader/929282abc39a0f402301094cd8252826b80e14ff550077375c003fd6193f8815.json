{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\S5\\\\Cloud\\\\Ench\\xE8re\\\\front-enchere-backoffice\\\\src\\\\mothercomponents\\\\CrudCategory.jsx\",\n  _s = $RefreshSig$();\nimport { TableChild } from \"../childcomponents/TableChild\";\nimport Swal from \"sweetalert2\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CrudCategory = () => {\n  _s();\n  const headers = [\"ID\", \"Nom\", \"Description\"];\n  const rows = [[\"1\", \"Informatique\", \"Tout ce qui concerne l'informatique\"], [\"2\", \"Electronique\", \"Tout ce qui concerne l'électronique\"], [\"3\", \"Mécanique\", \"Tout ce qui concerne la mécanique\"]];\n  const currentCategory = useRef(null);\n  const updateCategory = id => {\n    const array = getCategoryData(id);\n    const inputStrings = getHtmlInputString(array, id);\n    console.log(inputStrings);\n    Swal.fire({\n      title: \"Modifier la catégorie\",\n      html: inputStrings\n    });\n  };\n  const getHtmlInputString = (valuesArray, id) => {\n    let htmlString = \"\";\n    valuesArray.forEach((value, index) => {\n      // check if the value is a number\n      if (isNaN(value)) {\n        htmlString += `<label>${headers[index]}</label><br/><input type=\"text\" value=\"${value}\" class=\"form-control\"/>`;\n      } else if (!isNaN(value)) {\n        htmlString += `<label>${headers[index]}</label><input type=\"number\" value=\"${value}\" class=\"form-control\"/>`;\n      } // check if the value is a date\n      else if (value.includes(\"-\")) {\n        htmlString += `<label>${headers[index]}</label><input type=\"date\" value=\"${value}\" class=\"form-control\"/>`;\n      }\n      htmlString += `<br/>`;\n    });\n    return htmlString;\n  };\n  const deleteCategory = id => {\n    Swal.fire({\n      title: 'Êtes-vous sûr?',\n      text: \"Vous ne pourrez pas revenir en arrière!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Oui, supprimez-le!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire('Supprimé!', 'Votre fichier a été supprimé.', 'success');\n      }\n    });\n  };\n  const buttons = [{\n    value: \"Modifier\",\n    className: \"btn btn-warning\",\n    icon: \"fas fa-edit\",\n    event: updateCategory\n  }, {\n    value: \"Supprimer\",\n    className: \"btn btn-danger\",\n    icon: \"fas fa-trash\",\n    event: deleteCategory\n  }];\n  const createBtn = document.getElementById(\"createBtn\");\n  document.getElementById(\"page-description\").innerHTML = \"Gestion des catégories\";\n  createBtn.innerHTML = \"Créer une catégorie\";\n  createBtn.onclick = async () => {\n    const {\n      value: formValues\n    } = await Swal.fire({\n      title: 'Ajouter une catégorie',\n      html: '<label>Nom</label>' + '<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Nom\">' + '<label>Description</label>' + '<input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Description\">',\n      focusConfirm: false,\n      preConfirm: () => {\n        return [document.getElementById('swal-input1').value, document.getElementById('swal-input2').value];\n      }\n    });\n    if (formValues) {\n      if (formValues[0] === \"\" || formValues[1] === \"\") {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Veuillez remplir tous les champs!'\n        });\n        return;\n      }\n      const obj = {\n        name: formValues[0],\n        description: formValues[1]\n      };\n      Swal.fire(JSON.stringify(obj));\n    }\n  };\n  const getCategoryData = id => {\n    return rows[id];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      padding: '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(TableChild, {\n          titre: \"Liste des catégories\",\n          headers: headers,\n          rows: rows,\n          buttons: buttons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n_s(CrudCategory, \"JrXrKZjSAKbqZeWkttktRiwqCVY=\");\n_c = CrudCategory;\nvar _c;\n$RefreshReg$(_c, \"CrudCategory\");","map":{"version":3,"names":["TableChild","Swal","useRef","CrudCategory","headers","rows","currentCategory","updateCategory","id","array","getCategoryData","inputStrings","getHtmlInputString","console","log","fire","title","html","valuesArray","htmlString","forEach","value","index","isNaN","includes","deleteCategory","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","buttons","className","event","createBtn","document","getElementById","innerHTML","onclick","formValues","focusConfirm","preConfirm","obj","name","description","JSON","stringify","padding"],"sources":["D:/ITU/S5/Cloud/Enchère/front-enchere-backoffice/src/mothercomponents/CrudCategory.jsx"],"sourcesContent":["import {TableChild} from \"../childcomponents/TableChild\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useRef} from \"react\";\r\n\r\nexport const CrudCategory = () => {\r\n    const headers = [\r\n        \"ID\",\r\n        \"Nom\",\r\n        \"Description\",\r\n    ]\r\n    const rows = [\r\n        [\r\n            \"1\",\r\n            \"Informatique\",\r\n            \"Tout ce qui concerne l'informatique\",\r\n        ],\r\n        [\r\n            \"2\",\r\n            \"Electronique\",\r\n            \"Tout ce qui concerne l'électronique\",\r\n        ],\r\n        [\r\n            \"3\",\r\n            \"Mécanique\",\r\n            \"Tout ce qui concerne la mécanique\",\r\n        ]\r\n    ]\r\n    const currentCategory=useRef(null);\r\n    const updateCategory = (id) => {\r\n        const array= getCategoryData(id);\r\n        const inputStrings=getHtmlInputString(array,id);\r\n        console.log(inputStrings)\r\n        Swal.fire({\r\n            title: \"Modifier la catégorie\",\r\n            html: inputStrings,\r\n        }\r\n        )\r\n    }\r\n\r\n    const getHtmlInputString = (valuesArray,id) => {\r\n        let htmlString = \"\";\r\n        valuesArray.forEach((value,index) => {\r\n            // check if the value is a number\r\n            if (isNaN(value)) {\r\n                htmlString += `<label>${headers[index]}</label><br/><input type=\"text\" value=\"${value}\" class=\"form-control\"/>`;\r\n            }else if(!isNaN(value)){\r\n                htmlString += `<label>${headers[index]}</label><input type=\"number\" value=\"${value}\" class=\"form-control\"/>`;\r\n            }// check if the value is a date\r\n            else if (value.includes(\"-\")) {\r\n                htmlString += `<label>${headers[index]}</label><input type=\"date\" value=\"${value}\" class=\"form-control\"/>`;\r\n            }\r\n            htmlString += `<br/>`;\r\n        });\r\n        return htmlString;\r\n    }\r\n\r\n    const deleteCategory = (id) => {\r\n        Swal.fire({\r\n            title: 'Êtes-vous sûr?',\r\n            text: \"Vous ne pourrez pas revenir en arrière!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Oui, supprimez-le!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Supprimé!',\r\n                    'Votre fichier a été supprimé.',\r\n                    'success'\r\n                )\r\n            }\r\n        }\r\n        )\r\n    }\r\n    const buttons = [\r\n        {\r\n            value:\"Modifier\",\r\n            className:\"btn btn-warning\",\r\n            icon:\"fas fa-edit\",\r\n            event: updateCategory\r\n        },\r\n        {\r\n            value:\"Supprimer\",\r\n            className:\"btn btn-danger\",\r\n            icon:\"fas fa-trash\",\r\n            event: deleteCategory\r\n        }\r\n    ]\r\n    const createBtn= document.getElementById(\"createBtn\");\r\n    document.getElementById(\"page-description\").innerHTML = \"Gestion des catégories\";\r\n    createBtn.innerHTML = \"Créer une catégorie\";\r\n    createBtn.onclick = async () => {\r\n        const {value: formValues} = await Swal.fire({\r\n            title: 'Ajouter une catégorie',\r\n            html:\r\n                '<label>Nom</label>' +\r\n                '<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Nom\">' +\r\n                '<label>Description</label>' +\r\n                '<input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Description\">',\r\n            focusConfirm: false,\r\n            preConfirm: () => {\r\n                return [\r\n                    document.getElementById('swal-input1').value,\r\n                    document.getElementById('swal-input2').value\r\n                ]\r\n            }\r\n        })\r\n        if (formValues) {\r\n            if (formValues[0] === \"\" || formValues[1] === \"\") {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Veuillez remplir tous les champs!',\r\n                })\r\n                return;\r\n            }\r\n            const obj = {\r\n                name: formValues[0],\r\n                description: formValues[1]\r\n            }\r\n            Swal.fire(JSON.stringify(obj))\r\n        }\r\n    }\r\n    const getCategoryData = (id) => {\r\n        return rows[id];\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\" style={{padding: '10px'}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <TableChild titre={\"Liste des catégories\"} headers={headers} rows={rows} buttons={buttons}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}