{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITU\\\\S5\\\\Cloud\\\\Ench\\xE8re\\\\front-enchere-backoffice\\\\src\\\\mothercomponents\\\\Refunds.jsx\",\n  _s = $RefreshSig$();\nimport { Crud } from \"./Crud\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BASE_URL, CONFIG } from \"../service/Api-Call\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Refunds = () => {\n  _s();\n  const [refunds, setRefunds] = useState([]);\n  function setToArray(data) {\n    let arr = [];\n    for (let i = 0; i < data.length; i++) {\n      let tempArr = [];\n      tempArr.push(data[i].id);\n      tempArr.push(data[i].customer_Id);\n      tempArr.push(data[i].amount);\n      let date = data[i].date_movement;\n      date = date.split(\"T\");\n      date = date[0] + ' ' + date[1];\n      date = date.slice(0, 19);\n      tempArr.push(date);\n      let dateValidation = data[i].date_validation;\n      arr.push(tempArr);\n    }\n    return arr;\n  }\n  useEffect(() => {\n    axios.get(`${BASE_URL}/refunds`, CONFIG).then(response => {\n      console.log(response.data.data);\n      const arr = setToArray(response.data.data);\n      setRefunds(arr);\n    }).catch(error => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Désolé...',\n        text: error.response.data.code + ': ' + error.response.data.message\n      });\n    });\n  });\n  const headers = [\"ID\", \"Type de mouvement\", \"Auteur\", \"Prix\", \"Date de demande\", \"Date de validation\"];\n  const names = [\"id\", \"typemouvement\", \"auteur\", \"prix\", \"datedemande\", \"datevalidation\"];\n  const rows = [[\"1\", \"Rechargement\", \"Jean Paul\", \"1000\", \"2021-01-01\", \"2021-01-12\"], [\"2\", \"Rechargement\", \"Jean Claude\", \"2000\", \"2021-05-11\", \"2021-05-12\"]];\n  const textValues = {\n    ajouter: \"Ajouter un rechargement\",\n    modifier: \"Accepter le rechargment\",\n    supprimer: \"Supprimer le rechargment\",\n    btnCreer: \"Créer\"\n  };\n  return /*#__PURE__*/_jsxDEV(Crud, {\n    tableTitle: \"Liste des rechargements\",\n    headers: headers,\n    names: names,\n    rows: rows,\n    textValues: textValues,\n    crud: false,\n    page_description: \"Recharges acceptées\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Refunds, \"KKL7kJPrYlPJwwhDWRkg1Gy2X4k=\");\n_c = Refunds;\nvar _c;\n$RefreshReg$(_c, \"Refunds\");","map":{"version":3,"names":["Crud","useEffect","useState","axios","BASE_URL","CONFIG","Swal","Refunds","refunds","setRefunds","setToArray","data","arr","i","length","tempArr","push","id","customer_Id","amount","date","date_movement","split","slice","dateValidation","date_validation","get","then","response","console","log","catch","error","fire","icon","title","text","code","message","headers","names","rows","textValues","ajouter","modifier","supprimer","btnCreer"],"sources":["D:/ITU/S5/Cloud/Enchère/front-enchere-backoffice/src/mothercomponents/Refunds.jsx"],"sourcesContent":["import {Crud} from \"./Crud\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL, CONFIG} from \"../service/Api-Call\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const Refunds = () => {\r\n    const [refunds, setRefunds] = useState([]);\r\n\r\n    function setToArray(data) {\r\n        let arr = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            let tempArr = []\r\n            tempArr.push(data[i].id)\r\n            tempArr.push(data[i].customer_Id)\r\n            tempArr.push(data[i].amount)\r\n            let date = data[i].date_movement;\r\n            date=date.split(\"T\");\r\n            date=date[0]+' '+date[1];\r\n            date=date.slice(0,19)\r\n            tempArr.push(date)\r\n            let dateValidation = data[i].date_validation;\r\n            arr.push(tempArr)\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    useEffect(() => {\r\n            axios.get(`${BASE_URL}/refunds`, CONFIG).then((response) => {\r\n                console.log(response.data.data)\r\n                const arr = setToArray(response.data.data)\r\n                setRefunds(arr)\r\n            }).catch((error) => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Désolé...',\r\n                    text: error.response.data.code + ': ' + error.response.data.message,\r\n                })\r\n            })\r\n        }\r\n    )\r\n    const headers = [\r\n        \"ID\",\r\n        \"Type de mouvement\",\r\n        \"Auteur\",\r\n        \"Prix\",\r\n        \"Date de demande\",\r\n        \"Date de validation\"\r\n    ]\r\n    const names = [\r\n        \"id\",\r\n        \"typemouvement\",\r\n        \"auteur\",\r\n        \"prix\",\r\n        \"datedemande\",\r\n        \"datevalidation\"\r\n    ]\r\n    const rows = [\r\n        [\r\n            \"1\",\r\n            \"Rechargement\",\r\n            \"Jean Paul\",\r\n            \"1000\",\r\n            \"2021-01-01\",\r\n            \"2021-01-12\"\r\n        ],\r\n        [\r\n            \"2\",\r\n            \"Rechargement\",\r\n            \"Jean Claude\",\r\n            \"2000\",\r\n            \"2021-05-11\",\r\n            \"2021-05-12\"\r\n        ]\r\n    ]\r\n    const textValues =\r\n        {\r\n            ajouter: \"Ajouter un rechargement\",\r\n            modifier: \"Accepter le rechargment\",\r\n            supprimer: \"Supprimer le rechargment\",\r\n            btnCreer: \"Créer\",\r\n        }\r\n    return (\r\n        <Crud tableTitle={\"Liste des rechargements\"} headers={headers} names={names} rows={rows} textValues={textValues}\r\n              crud={false} page_description={\"Recharges acceptées\"}/>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}